### This file was generated by Nexus Schema
### Do not make changes to this file directly


type auth {
  token: String!
  user: user!
}

scalar DateTime

type exercise {
  id: Int!
  label: String!
  name: String!
}

type exercise_instance {
  duration: Float
  exercise: exercise!
  exercise_session: exercise_session!
  id: Int!
  repetitions: Int
  weight: Float
}

input exercise_instanceCreateWithoutExercise_sessionInput {
  duration: Float
  exercise: exerciseCreateOneWithoutExercise_instanceInput!
  repetitions: Int
  weight: Float
}

input exercise_instanceCreateWithoutExerciseInput {
  duration: Float
  exercise_session: exercise_sessionCreateOneWithoutExercise_instanceInput!
  repetitions: Int
  weight: Float
}

input exercise_instanceScalarWhereInput {
  AND: [exercise_instanceScalarWhereInput!]
  duration: NullableFloatFilter
  exerciseId: IntFilter
  id: IntFilter
  NOT: [exercise_instanceScalarWhereInput!]
  OR: [exercise_instanceScalarWhereInput!]
  repetitions: NullableIntFilter
  sessionId: IntFilter
  weight: NullableFloatFilter
}

input exercise_instanceUpdateInput {
  duration: Float
  exercise: exerciseUpdateOneRequiredWithoutExercise_instanceInput
  exercise_session: exercise_sessionUpdateOneRequiredWithoutExercise_instanceInput
  id: Int
  repetitions: Int
  weight: Float
}

input exercise_instanceUpdateManyDataInput {
  duration: Float
  id: Int
  repetitions: Int
  weight: Float
}

input exercise_instanceUpdateManyWithoutExercise_sessionInput {
  connect: [exercise_instanceWhereUniqueInput!]
  create: [exercise_instanceCreateWithoutExercise_sessionInput!]
  delete: [exercise_instanceWhereUniqueInput!]
  deleteMany: [exercise_instanceScalarWhereInput!]
  disconnect: [exercise_instanceWhereUniqueInput!]
  set: [exercise_instanceWhereUniqueInput!]
  update: [exercise_instanceUpdateWithWhereUniqueWithoutExercise_sessionInput!]
  updateMany: [exercise_instanceUpdateManyWithWhereNestedInput!]
  upsert: [exercise_instanceUpsertWithWhereUniqueWithoutExercise_sessionInput!]
}

input exercise_instanceUpdateManyWithoutExerciseInput {
  connect: [exercise_instanceWhereUniqueInput!]
  create: [exercise_instanceCreateWithoutExerciseInput!]
  delete: [exercise_instanceWhereUniqueInput!]
  deleteMany: [exercise_instanceScalarWhereInput!]
  disconnect: [exercise_instanceWhereUniqueInput!]
  set: [exercise_instanceWhereUniqueInput!]
  update: [exercise_instanceUpdateWithWhereUniqueWithoutExerciseInput!]
  updateMany: [exercise_instanceUpdateManyWithWhereNestedInput!]
  upsert: [exercise_instanceUpsertWithWhereUniqueWithoutExerciseInput!]
}

input exercise_instanceUpdateManyWithWhereNestedInput {
  data: exercise_instanceUpdateManyDataInput!
  where: exercise_instanceScalarWhereInput!
}

input exercise_instanceUpdateWithoutExercise_sessionDataInput {
  duration: Float
  exercise: exerciseUpdateOneRequiredWithoutExercise_instanceInput
  id: Int
  repetitions: Int
  weight: Float
}

input exercise_instanceUpdateWithoutExerciseDataInput {
  duration: Float
  exercise_session: exercise_sessionUpdateOneRequiredWithoutExercise_instanceInput
  id: Int
  repetitions: Int
  weight: Float
}

input exercise_instanceUpdateWithWhereUniqueWithoutExercise_sessionInput {
  data: exercise_instanceUpdateWithoutExercise_sessionDataInput!
  where: exercise_instanceWhereUniqueInput!
}

input exercise_instanceUpdateWithWhereUniqueWithoutExerciseInput {
  data: exercise_instanceUpdateWithoutExerciseDataInput!
  where: exercise_instanceWhereUniqueInput!
}

input exercise_instanceUpsertWithWhereUniqueWithoutExercise_sessionInput {
  create: exercise_instanceCreateWithoutExercise_sessionInput!
  update: exercise_instanceUpdateWithoutExercise_sessionDataInput!
  where: exercise_instanceWhereUniqueInput!
}

input exercise_instanceUpsertWithWhereUniqueWithoutExerciseInput {
  create: exercise_instanceCreateWithoutExerciseInput!
  update: exercise_instanceUpdateWithoutExerciseDataInput!
  where: exercise_instanceWhereUniqueInput!
}

input exercise_instanceWhereUniqueInput {
  id: Int
}

type exercise_session {
  exercise_instance(after: exercise_instanceWhereUniqueInput, before: exercise_instanceWhereUniqueInput, first: Int, last: Int): [exercise_instance!]!
  id: Int!
  note: String
  timestamp: DateTime
  user: user!
}

input exercise_sessionCreateOneWithoutExercise_instanceInput {
  connect: exercise_sessionWhereUniqueInput
  create: exercise_sessionCreateWithoutExercise_instanceInput
}

input exercise_sessionCreateWithoutExercise_instanceInput {
  note: String
  timestamp: DateTime
  user: userCreateOneWithoutExercise_sessionInput!
}

input exercise_sessionUpdateInput {
  exercise_instance: exercise_instanceUpdateManyWithoutExercise_sessionInput
  id: Int
  note: String
  timestamp: DateTime
  user: userUpdateOneRequiredWithoutExercise_sessionInput
}

input exercise_sessionUpdateOneRequiredWithoutExercise_instanceInput {
  connect: exercise_sessionWhereUniqueInput
  create: exercise_sessionCreateWithoutExercise_instanceInput
  update: exercise_sessionUpdateWithoutExercise_instanceDataInput
  upsert: exercise_sessionUpsertWithoutExercise_instanceInput
}

input exercise_sessionUpdateWithoutExercise_instanceDataInput {
  id: Int
  note: String
  timestamp: DateTime
  user: userUpdateOneRequiredWithoutExercise_sessionInput
}

input exercise_sessionUpsertWithoutExercise_instanceInput {
  create: exercise_sessionCreateWithoutExercise_instanceInput!
  update: exercise_sessionUpdateWithoutExercise_instanceDataInput!
}

input exercise_sessionWhereUniqueInput {
  id: Int
}

input exerciseCreateOneWithoutExercise_instanceInput {
  connect: exerciseWhereUniqueInput
  create: exerciseCreateWithoutExercise_instanceInput
}

input exerciseCreateWithoutExercise_instanceInput {
  label: String!
  name: String!
}

input exerciseUpdateInput {
  exercise_instance: exercise_instanceUpdateManyWithoutExerciseInput
  id: Int
  label: String
  name: String
}

input exerciseUpdateOneRequiredWithoutExercise_instanceInput {
  connect: exerciseWhereUniqueInput
  create: exerciseCreateWithoutExercise_instanceInput
  update: exerciseUpdateWithoutExercise_instanceDataInput
  upsert: exerciseUpsertWithoutExercise_instanceInput
}

input exerciseUpdateWithoutExercise_instanceDataInput {
  id: Int
  label: String
  name: String
}

input exerciseUpsertWithoutExercise_instanceInput {
  create: exerciseCreateWithoutExercise_instanceInput!
  update: exerciseUpdateWithoutExercise_instanceDataInput!
}

input exerciseWhereUniqueInput {
  id: Int
  name: String
}

input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: Int
  notIn: [Int!]
}

type Mutation {
  createExercise(label: String, name: String): exercise!
  createExerciseInstance(duration: Float, exerciseId: Int!, repetitions: Int, sessionId: Int!, weight: Float): exercise_instance!
  createExerciseSession(note: String): exercise_session!
  deleteOneexercise(where: exerciseWhereUniqueInput!): exercise
  deleteOneexercise_instance(where: exercise_instanceWhereUniqueInput!): exercise_instance
  deleteOneexercise_session(where: exercise_sessionWhereUniqueInput!): exercise_session
  deleteOneuser(where: userWhereUniqueInput!): user
  loginUser(email: String, password: String): auth!
  signupUser(email: String, name: String, password: String): auth!
  updateOneexercise(data: exerciseUpdateInput!, where: exerciseWhereUniqueInput!): exercise
  updateOneexercise_instance(data: exercise_instanceUpdateInput!, where: exercise_instanceWhereUniqueInput!): exercise_instance
  updateOneexercise_session(data: exercise_sessionUpdateInput!, where: exercise_sessionWhereUniqueInput!): exercise_session
}

input NullableFloatFilter {
  equals: Float
  gt: Float
  gte: Float
  in: [Float!]
  lt: Float
  lte: Float
  not: Float
  notIn: [Float!]
}

input NullableIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: Int
  notIn: [Int!]
}

type Query {
  exerciseInstances(sessionId: Int!): [exercise_instance!]!
  exercises: [exercise!]!
  exerciseSessions: [exercise_session!]!
  users: [user!]!
}

type user {
  email: String!
  id: Int!
  name: String
}

input userCreateOneWithoutExercise_sessionInput {
  connect: userWhereUniqueInput
  create: userCreateWithoutExercise_sessionInput
}

input userCreateWithoutExercise_sessionInput {
  email: String!
  name: String
  password: String!
}

input userUpdateOneRequiredWithoutExercise_sessionInput {
  connect: userWhereUniqueInput
  create: userCreateWithoutExercise_sessionInput
  update: userUpdateWithoutExercise_sessionDataInput
  upsert: userUpsertWithoutExercise_sessionInput
}

input userUpdateWithoutExercise_sessionDataInput {
  email: String
  id: Int
  name: String
  password: String
}

input userUpsertWithoutExercise_sessionInput {
  create: userCreateWithoutExercise_sessionInput!
  update: userUpdateWithoutExercise_sessionDataInput!
}

input userWhereUniqueInput {
  email: String
  id: Int
}
